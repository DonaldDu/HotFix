import java.util.zip.ZipEntry
import java.util.zip.ZipFile
import java.util.zip.ZipOutputStream

buildscript {
    ext.kotlin_version = '1.3.71'
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.novoda:bintray-release:0.9.2'
        classpath 'com.android.tools.build:gradle:3.6.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

static File genDexOnlyApk(File apkFile) throws IOException {
    ZipFile apk = new ZipFile(apkFile)
    File dexOnlyFile = new File(apkFile.getParentFile(), "dexOnly.apk")
    if (dexOnlyFile.exists()) dexOnlyFile.delete()
    ZipOutputStream outputStream = new ZipOutputStream(new FileOutputStream(dexOnlyFile))
    Enumeration<? extends ZipEntry> entries = apk.entries()
    while (entries.hasMoreElements()) {
        ZipEntry entry = entries.nextElement()
        if (entry.getName().endsWith(".dex")) {
            outputStream.putNextEntry(new ZipEntry(entry.getName()))
            InputStream inputStream = apk.getInputStream(entry)
            copyStream(inputStream, outputStream)
            inputStream.close()
        }
    }
    outputStream.flush()
    outputStream.close()
    return dexOnlyFile
}

private static void copyStream(InputStream inputStream, OutputStream outputStream) throws IOException {
    byte[] buffer = new byte[1024 * 1024 * 10]
    int size
    while (true) {
        size = inputStream.read(buffer)
        if (size > 0) outputStream.write(buffer, 0, size)
        else break
    }
}